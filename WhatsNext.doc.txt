General concepts:
    Selections:

    Cut/Copy/Paste (Selection):

    Load/Save project file:
        Input type="file" could be a start -> "svgo online" for a start

        Import svg into existing project, for merging



SplitView:
    listen to window resize events
    redirect it to view "one" and "two"

SVGConvertor:
    give nodes a type, so that PropView knows what to present

SVGEditor:
    MapView:
        make it a component, call it SVGView
        adjust zoom center on resize

TreeView:
    implement ObservableTree!

    edit node label

    add/remove items -> create dialog

    show/hide nodes, unhide all, hide others
    same with lock/ unlock

    multi-selection (by pressing SHIFT for ex.)


-------------------------------------------------------------------
SVG:
----
    Items: path, circle, rect, line, text, ... make their props editable

    give leaf-nodes a z-value and a transform matrix

use "use"!
    for instancing, leads to a reference system, items are resources only
    an item which has been loaded or created is unique and not visible and not 
    part of the scene. Using it in a scene would require creating a reference to it

Styles:
    sorting of styles

Space Partitioning/ Visibility: e.g. quad tree, k-D tree
    visibility check vs. brute-force painting, measure times!

Animations: Black Hole
    Transformations by altering node trafo matrix
    maybe give nodes a cb function that has to provide values 
    for a given point in time

